{"version":3,"sources":["AudioSelector.js","index.js"],"names":["AudioSelector","playing","setPlaying","useState","selectedTrack","setSelectedTrack","volume","setVolume","previousVolume","setPreviousVolume","audioRef","useRef","useEffect","audio","Audio","setAttribute","preload","enableAudio","context","window","AudioContext","webkitAudioContext","source","createBufferSource","buffer","createBuffer","connect","destination","start","document","removeEventListener","addEventListener","current","tracks","id","title","duration","src","React","createElement","className","map","track","key","onClick","pause","play","handleTrackSelect","toggleMute","type","min","max","value","onChange","e","newVolume","parseInt","target","navigator","serviceWorker","register","then","registration","console","log","scope","catch","error","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.0f55a78b.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './styles.css';\nconst BASE_PATH = '/beaulne-player';\n\nconst AudioSelector = () => {\n  const [playing, setPlaying] = useState(false);\n  const [selectedTrack, setSelectedTrack] = useState(null);\n  const [volume, setVolume] = useState(80);\n  const [previousVolume, setPreviousVolume] = useState(80);\n  const audioRef = useRef(null);\n\n  useEffect(() => {\n    const audio = new Audio();\n    audio.setAttribute('playsinline', 'true');\n    audio.setAttribute('webkit-playsinline', 'true'); // For older iOS versions\n    audio.preload = 'auto';\n    \n    const enableAudio = () => {\n      const context = new (window.AudioContext || window.webkitAudioContext)();\n      const source = context.createBufferSource();\n      source.buffer = context.createBuffer(1, 1, 22050);\n      source.connect(context.destination);\n      source.start(0);\n      \n      document.removeEventListener('touchstart', enableAudio);\n      document.removeEventListener('touchend', enableAudio);\n      document.removeEventListener('click', enableAudio);\n    };\n\n    document.addEventListener('touchstart', enableAudio);\n    document.addEventListener('touchend', enableAudio);\n    document.addEventListener('click', enableAudio);\n\n    audioRef.current = audio;\n\n    return () => {\n      document.removeEventListener('touchstart', enableAudio);\n      document.removeEventListener('touchend', enableAudio);\n      document.removeEventListener('click', enableAudio);\n    };\n  }, []);\n\n  const playSound = async (soundUrl) => {\n    try {\n      if (audioRef.current) {\n        audioRef.current.src = soundUrl;\n        await audioRef.current.load();\n        const playPromise = audioRef.current.play();\n        \n        if (playPromise !== undefined) {\n          playPromise.catch((error) => {\n            console.error('Playback error:', error);\n          });\n        }\n      }\n    } catch (error) {\n      console.error('Error playing sound:', error);\n    }\n  };\n\n  const tracks = [\n    { id: 1, title: \"Welcome\", duration: \"2:30\", src: `${BASE_PATH}/audio/noise.mp3` },\n    { id: 2, title: \"Artist\", duration: \"3:45\", src: `${BASE_PATH}/audio/noise.mp3` },\n    { id: 3, title: \"Artwork\", duration: \"4:15\", src: `${BASE_PATH}/audio/noise.mp3` }\n  ];\n\n  const handleTrackSelect = (track) => {\n    if (selectedTrack?.id === track.id) {\n      if (playing) {\n        audioRef.current.pause();\n      } else {\n        audioRef.current.play();\n      }\n      setPlaying(!playing);\n    } else {\n      audioRef.current.src = track.src;\n      audioRef.current.volume = volume / 100;\n      audioRef.current.play();\n      setSelectedTrack(track);\n      setPlaying(true);\n    }\n  };\n\n  const toggleMute = () => {\n    if (volume > 0) {\n      setPreviousVolume(volume);\n      setVolume(0);\n      audioRef.current.volume = 0;\n    } else {\n      setVolume(previousVolume);\n      audioRef.current.volume = previousVolume / 100;\n    }\n  };\n\n  const handleVolumeChange = (e) => {\n    const newVolume = parseInt(e.target.value);\n    setVolume(newVolume);\n    audioRef.current.volume = newVolume / 100;\n  };\n\n  return (\n    <div className=\"player-container\">\n      <div className=\"track-list\">\n        {tracks.map((track) => (\n          <button\n            key={track.id}\n            onClick={() => handleTrackSelect(track)}\n            className={`track-button ${selectedTrack?.id === track.id ? 'selected' : ''}`}\n          >\n            <div className=\"play-icon\">\n              {selectedTrack?.id === track.id && playing ? \"‚è∏Ô∏è\" : \"‚ñ∂Ô∏è\"}\n            </div>\n            <div className=\"track-info\">\n              <div className=\"track-title\">{track.title}</div>\n              <div className=\"track-duration\">{track.duration}</div>\n            </div>\n          </button>\n        ))}\n      </div>\n      \n      {selectedTrack && (\n        <div className=\"volume-control\">\n          <button onClick={toggleMute}>\n            {volume === 0 ? \"üîá\" : \"üîä\"}\n          </button>\n          <input\n            type=\"range\"\n            min=\"0\"\n            max=\"100\"\n            value={volume}\n            onChange={handleVolumeChange}\n            className=\"volume-slider\"\n          />\n          <span className=\"volume-text\">{volume}%</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AudioSelector;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport AudioSelector from './AudioSelector';\nimport './styles.css';\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', () => {\n    navigator.serviceWorker.register('/service-worker.js')\n      .then((registration) => {\n        console.log('Service Worker registered with scope:', registration.scope);\n      })\n      .catch((error) => {\n        console.error('Service Worker registration failed:', error);\n      });\n  });\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <AudioSelector />\n  </React.StrictMode>\n);\n\n\n"],"sourceRoot":""}