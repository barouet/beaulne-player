{"version":3,"sources":["AudioSelector.js","index.js"],"names":["AudioSelector","playing","setPlaying","useState","selectedTrack","setSelectedTrack","audioRef","useRef","tracks","id","title","duration","src","React","useEffect","current","play","createElement","className","map","track","key","onClick","pause","handleTrackSelect","ref","controls","onPlay","onPause","navigator","window","addEventListener","serviceWorker","register","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"iLAsEeA,MAlEOA,KACpB,MAAOC,EAASC,GAAcC,oBAAS,IAChCC,EAAeC,GAAoBF,mBAAS,MAC7CG,EAAWC,iBAAO,MAElBC,EAAS,CACb,CAAEC,GAAI,EAAGC,MAAO,UAAWC,SAAU,OAAQC,IAAI,mCACjD,CAAEH,GAAI,EAAGC,MAAO,SAAUC,SAAU,OAAQC,IAAI,mCAChD,CAAEH,GAAI,EAAGC,MAAO,UAAWC,SAAU,OAAQC,IAAI,oCAwBnD,OAPAC,IAAMC,UAAU,KACVV,IACFE,EAASS,QAAQH,IAAMR,EAAcQ,IACrCN,EAASS,QAAQC,SAElB,CAACZ,IAGFS,IAAAI,cAAA,OAAKC,UAAU,oBACbL,IAAAI,cAAA,OAAKC,UAAU,cACZV,EAAOW,IAAKC,GACXP,IAAAI,cAAA,UACEI,IAAKD,EAAMX,GACXa,QAASA,IA3BQF,MACR,OAAbhB,QAAa,IAAbA,OAAa,EAAbA,EAAeK,MAAOW,EAAMX,IAC1BR,EACFK,EAASS,QAAQQ,QAEjBjB,EAASS,QAAQC,OAEnBd,GAAYD,KAEZI,EAAiBe,GACjBlB,GAAW,KAiBUsB,CAAkBJ,GACjCF,UAAW,kBAA6B,OAAbd,QAAa,IAAbA,OAAa,EAAbA,EAAeK,MAAOW,EAAMX,GAAK,WAAa,KAEzEI,IAAAI,cAAA,OAAKC,UAAU,cACC,OAAbd,QAAa,IAAbA,OAAa,EAAbA,EAAeK,MAAOW,EAAMX,IAAMR,EAAU,eAAO,gBAEtDY,IAAAI,cAAA,OAAKC,UAAU,cACbL,IAAAI,cAAA,OAAKC,UAAU,eAAeE,EAAMV,OACpCG,IAAAI,cAAA,OAAKC,UAAU,kBAAkBE,EAAMT,cAM9CP,GACCS,IAAAI,cAAA,OAAKC,UAAU,kBACbL,IAAAI,cAAA,SACEQ,IAAKnB,EACLoB,UAAQ,EACRC,OAAQA,IAAMzB,GAAW,GACzB0B,QAASA,IAAM1B,GAAW,QCvDlC,kBAAmB2B,WACrBC,OAAOC,iBAAiB,OAAQ,KAC9BF,UAAUG,cAAcC,SAAS,wBAIxBC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHzB,IAAAI,cAACJ,IAAM0B,WAAU,KACf1B,IAAAI,cAACjB,EAAa,S","file":"static/js/main.8975a34d.chunk.js","sourcesContent":["\nimport React, { useState, useRef } from 'react';\nimport './styles.css';\n\nconst AudioSelector = () => {\n  const [playing, setPlaying] = useState(false);\n  const [selectedTrack, setSelectedTrack] = useState(null);\n  const audioRef = useRef(null);\n\n  const tracks = [\n    { id: 1, title: \"Welcome\", duration: \"2:30\", src:`${process.env.PUBLIC_URL}/audio/Noise.wav` },\n    { id: 2, title: \"Artist\", duration: \"3:45\", src:`${process.env.PUBLIC_URL}/audio/Noise.wav` },\n    { id: 3, title: \"Artwork\", duration: \"4:15\", src:`${process.env.PUBLIC_URL}/audio/Noise.wav` }\n  ];\n\n  const handleTrackSelect = (track) => {\n    if (selectedTrack?.id === track.id) {\n      if (playing) {\n        audioRef.current.pause();\n      } else {\n        audioRef.current.play();\n      }\n      setPlaying(!playing);\n    } else {\n      setSelectedTrack(track);\n      setPlaying(true);\n    }\n  };\n\n  React.useEffect(() => {\n    if (selectedTrack) {\n      audioRef.current.src = selectedTrack.src;\n      audioRef.current.play();\n    }\n  }, [selectedTrack]);\n\n  return (\n    <div className=\"player-container\">\n      <div className=\"track-list\">\n        {tracks.map((track) => (\n          <button\n            key={track.id}\n            onClick={() => handleTrackSelect(track)}\n            className={`track-button ${selectedTrack?.id === track.id ? 'selected' : ''}`}\n          >\n            <div className=\"play-icon\">\n              {selectedTrack?.id === track.id && playing ? \"⏸️\" : \"▶️\"}\n            </div>\n            <div className=\"track-info\">\n              <div className=\"track-title\">{track.title}</div>\n              <div className=\"track-duration\">{track.duration}</div>\n            </div>\n          </button>\n        ))}\n      </div>\n      \n      {selectedTrack && (\n        <div className=\"audio-controls\">\n          <audio \n            ref={audioRef}\n            controls\n            onPlay={() => setPlaying(true)}\n            onPause={() => setPlaying(false)}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AudioSelector;","\n\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport AudioSelector from './AudioSelector';\nimport './styles.css';\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', () => {\n    navigator.serviceWorker.register('/service-worker.js');\n  });\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <AudioSelector />\n  </React.StrictMode>\n);\n\n\n"],"sourceRoot":""}